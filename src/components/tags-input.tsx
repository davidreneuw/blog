/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/KfMnP30VLQR
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client";

import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { useEffect, useState } from "react";
import { FaPlus, FaTimes } from "react-icons/fa";
import { Badge } from "./ui/badge";

export function TagsInput({
  params,
}: {
  params: {
    startTags: string[];
    onChange: (tags: string[]) => void;
    suggestions?: string[];
  };
}) {
  const [tags, setTags] = useState<string[]>(params.startTags);
  const [newTag, setNewTag] = useState("");
  const [suggestions, setSuggestions] = useState<string[]>([]);

  useEffect(() => {
    params.onChange(tags);
  }, [tags]);

  useEffect(() => {
    setSuggestions([]);
    if (params.suggestions && newTag.trim() !== "") {
      let foundSuggestions = params.suggestions
        .filter(
          (suggestion) =>
            suggestion.includes(newTag.trim()) && !tags.includes(suggestion)
        )
        .slice(0, 5);
      setSuggestions(foundSuggestions);
    }
  }, [newTag]);

  const addTag = (t: string) => {
    if (t.trim() !== "") {
      let tagsList = t.split(",");
      tagsList.forEach((tag) => {
        setTags([...tags, t.trim()]);
      });
      setNewTag("");
    }
  };

  const removeTag = (index: number) => {
    const updatedTags = [...tags];
    updatedTags.splice(index, 1);
    setTags(updatedTags);
  };

  return (
    <div className="w-full">
      <div className="flex items-center space-x-2">
        <Button type="button" onClick={() => addTag(newTag)}>
          Add
        </Button>
        <Input
          type="text"
          placeholder="Add a tag"
          value={newTag}
          onChange={(e) => setNewTag(e.target.value)}
          onKeyDown={(e) => {
            if (e.key === "Enter") {
              e.preventDefault();
              addTag(newTag);
            }
          }}
          className="flex-1"
        />
      </div>
      <div className="mt-4 flex flex-wrap gap-2 flex-grow-1">
        <span className="text-sm">Current tags:</span>
        {tags.map((tag, index) => (
          <Badge key={index} variant="secondary">
            {tag}
            <Button
              type="button"
              variant="ghost"
              size="icon"
              className="ml-2 -mr-1 h-5 w-5 rounded-full hover:bg-primary/20"
              onClick={() => removeTag(index)}
            >
              <FaTimes className="h-4 w-4" />
            </Button>
          </Badge>
        ))}
      </div>
      <div className="mt-4 flex flex-wrap gap-2 flex-grow-1">
        <span className="text-sm">Suggestions:</span>
        {suggestions.map((suggestion, index) => (
          <Badge key={index} variant="secondary">
            {suggestion}
            <Button
              type="button"
              variant="ghost"
              size="icon"
              className="ml-2 -mr-1 h-5 w-5 rounded-full hover:bg-primary/20"
              onClick={() => {
                console.log("suggestion", suggestion.trim());
                addTag(suggestion);
              }}
            >
              <FaPlus className="h-4 w-4" />
            </Button>
          </Badge>
        ))}
      </div>
    </div>
  );
}

function XIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M18 6 6 18" />
      <path d="m6 6 12 12" />
    </svg>
  );
}
